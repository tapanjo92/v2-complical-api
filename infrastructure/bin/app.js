#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const dynamodb_stack_1 = require("../lib/dynamodb-stack");
const auth_stack_1 = require("../lib/auth-stack");
const api_stack_1 = require("../lib/api-stack");
const frontend_stack_1 = require("../lib/frontend-stack");
const app = new cdk.App();
const environment = process.env.ENVIRONMENT || 'test';
const env = {
    account: process.env.CDK_DEFAULT_ACCOUNT,
    region: process.env.CDK_DEFAULT_REGION || 'ap-south-1',
};
// Deploy DynamoDB stack first
const dynamoStack = new dynamodb_stack_1.DynamoDBStack(app, `CompliCal-DynamoDB-${environment}`, {
    environment,
    env,
    description: 'CompliCal DynamoDB tables with optimized design',
});
// Deploy Auth stack
const authStack = new auth_stack_1.AuthStack(app, `CompliCal-Auth-${environment}`, {
    env,
    description: 'CompliCal Cognito authentication',
});
// Deploy API stack with dependencies
const apiStack = new api_stack_1.ApiStack(app, `CompliCal-API-${environment}`, {
    environment,
    env,
    deadlinesTable: dynamoStack.deadlinesTable,
    apiKeysTable: dynamoStack.apiKeysTable,
    apiUsageTable: dynamoStack.apiUsageTable,
    userPool: authStack.userPool,
    userPoolClient: authStack.userPoolClient,
    description: 'CompliCal API Gateway and Lambda functions',
});
apiStack.addDependency(dynamoStack);
apiStack.addDependency(authStack);
// Deploy Frontend stack
const frontendStack = new frontend_stack_1.FrontendStack(app, `CompliCal-Frontend-${environment}`, {
    environment,
    env,
    description: 'CompliCal frontend with CloudFront and S3',
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsMERBQXNEO0FBQ3RELGtEQUE4QztBQUM5QyxnREFBNEM7QUFDNUMsMERBQXNEO0FBRXRELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLE1BQU0sQ0FBQztBQUN0RCxNQUFNLEdBQUcsR0FBRztJQUNWLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtJQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsSUFBSSxZQUFZO0NBQ3ZELENBQUM7QUFFRiw4QkFBOEI7QUFDOUIsTUFBTSxXQUFXLEdBQUcsSUFBSSw4QkFBYSxDQUFDLEdBQUcsRUFBRSxzQkFBc0IsV0FBVyxFQUFFLEVBQUU7SUFDOUUsV0FBVztJQUNYLEdBQUc7SUFDSCxXQUFXLEVBQUUsaURBQWlEO0NBQy9ELENBQUMsQ0FBQztBQUVILG9CQUFvQjtBQUNwQixNQUFNLFNBQVMsR0FBRyxJQUFJLHNCQUFTLENBQUMsR0FBRyxFQUFFLGtCQUFrQixXQUFXLEVBQUUsRUFBRTtJQUNwRSxHQUFHO0lBQ0gsV0FBVyxFQUFFLGtDQUFrQztDQUNoRCxDQUFDLENBQUM7QUFFSCxxQ0FBcUM7QUFDckMsTUFBTSxRQUFRLEdBQUcsSUFBSSxvQkFBUSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsV0FBVyxFQUFFLEVBQUU7SUFDakUsV0FBVztJQUNYLEdBQUc7SUFDSCxjQUFjLEVBQUUsV0FBVyxDQUFDLGNBQWM7SUFDMUMsWUFBWSxFQUFFLFdBQVcsQ0FBQyxZQUFZO0lBQ3RDLGFBQWEsRUFBRSxXQUFXLENBQUMsYUFBYTtJQUN4QyxRQUFRLEVBQUUsU0FBUyxDQUFDLFFBQVE7SUFDNUIsY0FBYyxFQUFFLFNBQVMsQ0FBQyxjQUFjO0lBQ3hDLFdBQVcsRUFBRSw0Q0FBNEM7Q0FDMUQsQ0FBQyxDQUFDO0FBRUgsUUFBUSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNwQyxRQUFRLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRWxDLHdCQUF3QjtBQUN4QixNQUFNLGFBQWEsR0FBRyxJQUFJLDhCQUFhLENBQUMsR0FBRyxFQUFFLHNCQUFzQixXQUFXLEVBQUUsRUFBRTtJQUNoRixXQUFXO0lBQ1gsR0FBRztJQUNILFdBQVcsRUFBRSwyQ0FBMkM7Q0FDekQsQ0FBQyxDQUFDO0FBRUgsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCB7IER5bmFtb0RCU3RhY2sgfSBmcm9tICcuLi9saWIvZHluYW1vZGItc3RhY2snO1xuaW1wb3J0IHsgQXV0aFN0YWNrIH0gZnJvbSAnLi4vbGliL2F1dGgtc3RhY2snO1xuaW1wb3J0IHsgQXBpU3RhY2sgfSBmcm9tICcuLi9saWIvYXBpLXN0YWNrJztcbmltcG9ydCB7IEZyb250ZW5kU3RhY2sgfSBmcm9tICcuLi9saWIvZnJvbnRlbmQtc3RhY2snO1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuXG5jb25zdCBlbnZpcm9ubWVudCA9IHByb2Nlc3MuZW52LkVOVklST05NRU5UIHx8ICd0ZXN0JztcbmNvbnN0IGVudiA9IHtcbiAgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCxcbiAgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfHwgJ2FwLXNvdXRoLTEnLFxufTtcblxuLy8gRGVwbG95IER5bmFtb0RCIHN0YWNrIGZpcnN0XG5jb25zdCBkeW5hbW9TdGFjayA9IG5ldyBEeW5hbW9EQlN0YWNrKGFwcCwgYENvbXBsaUNhbC1EeW5hbW9EQi0ke2Vudmlyb25tZW50fWAsIHtcbiAgZW52aXJvbm1lbnQsXG4gIGVudixcbiAgZGVzY3JpcHRpb246ICdDb21wbGlDYWwgRHluYW1vREIgdGFibGVzIHdpdGggb3B0aW1pemVkIGRlc2lnbicsXG59KTtcblxuLy8gRGVwbG95IEF1dGggc3RhY2tcbmNvbnN0IGF1dGhTdGFjayA9IG5ldyBBdXRoU3RhY2soYXBwLCBgQ29tcGxpQ2FsLUF1dGgtJHtlbnZpcm9ubWVudH1gLCB7XG4gIGVudixcbiAgZGVzY3JpcHRpb246ICdDb21wbGlDYWwgQ29nbml0byBhdXRoZW50aWNhdGlvbicsXG59KTtcblxuLy8gRGVwbG95IEFQSSBzdGFjayB3aXRoIGRlcGVuZGVuY2llc1xuY29uc3QgYXBpU3RhY2sgPSBuZXcgQXBpU3RhY2soYXBwLCBgQ29tcGxpQ2FsLUFQSS0ke2Vudmlyb25tZW50fWAsIHtcbiAgZW52aXJvbm1lbnQsXG4gIGVudixcbiAgZGVhZGxpbmVzVGFibGU6IGR5bmFtb1N0YWNrLmRlYWRsaW5lc1RhYmxlLFxuICBhcGlLZXlzVGFibGU6IGR5bmFtb1N0YWNrLmFwaUtleXNUYWJsZSxcbiAgYXBpVXNhZ2VUYWJsZTogZHluYW1vU3RhY2suYXBpVXNhZ2VUYWJsZSxcbiAgdXNlclBvb2w6IGF1dGhTdGFjay51c2VyUG9vbCxcbiAgdXNlclBvb2xDbGllbnQ6IGF1dGhTdGFjay51c2VyUG9vbENsaWVudCxcbiAgZGVzY3JpcHRpb246ICdDb21wbGlDYWwgQVBJIEdhdGV3YXkgYW5kIExhbWJkYSBmdW5jdGlvbnMnLFxufSk7XG5cbmFwaVN0YWNrLmFkZERlcGVuZGVuY3koZHluYW1vU3RhY2spO1xuYXBpU3RhY2suYWRkRGVwZW5kZW5jeShhdXRoU3RhY2spO1xuXG4vLyBEZXBsb3kgRnJvbnRlbmQgc3RhY2tcbmNvbnN0IGZyb250ZW5kU3RhY2sgPSBuZXcgRnJvbnRlbmRTdGFjayhhcHAsIGBDb21wbGlDYWwtRnJvbnRlbmQtJHtlbnZpcm9ubWVudH1gLCB7XG4gIGVudmlyb25tZW50LFxuICBlbnYsXG4gIGRlc2NyaXB0aW9uOiAnQ29tcGxpQ2FsIGZyb250ZW5kIHdpdGggQ2xvdWRGcm9udCBhbmQgUzMnLFxufSk7XG5cbmFwcC5zeW50aCgpOyJdfQ==